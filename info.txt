Working from ubuntu in WSL2

sudo bash
apt update && apt upgrade

Get Node Version Manager:
sudo apt-get install curl
curl -o- https://raw.githubusercontent.com/nvm-sh/nvm/v0.35.3/install.sh | bash

#Latest release
nvm install Node

#LTS Version
nvm install --lts

#create React App
npx create-react.app frontend

npm start: run a development server
nom test: run some test as part of deployment
npm run build: prepares for deployment

#to build using a different dockerfile
docker build -t frontend -f Dockerfile.dev .

-> Delete the node_module folder inside our dir, its 135 Mb that gets copied and rebuild anyweays

 #Start Container and run image
 docker run -it -p 3000:3000 CONTAINER_ID

#To map a volum Except a subdirectory tht we specify as another volume
 docker run -it -p 3000:3000 -v /app/node_modules -v $(pwd):/app frontend

#To make sure the js file changes get picked up immediately
In docke.compose add
environment:
            #This is for React to automatically pick up changes in deve environment
            - CHOKIDAR_USEPOLLING=true

#To make sure app does not exit immediately in dev environment
web:
        #Avoid having webapp exiting with code 0 immediately
        stdin_open: true

#Running the tests.
docker build -t frontend -f Dockerfile.dev .
docker run -it frontend npm run test

#When modifying docker.compose for tests, just override the starting "command" for the container

Docker attach: allows to attach to a container an attach to stdin,stdout,stderr of primary process in container
-> but npm test uis not process one, so we cannot attache to it..

----
Prod environment: need a server, nginx to process the requests
Note: prod environment does not need all the "build" files (150MB), just the 
resulting produced app.

Multi-Step Docker build:
How to use 2 different base images (alpine for build and nginx for run)
MultiStage: 2 phases: 
    - build phase with alpine image and 
    - run phase with nginx base image
        take out the build directory from the build phase. (everything else is dropped)
note: AWS fails with named builders and needs tu use the numeric index of the stages (0,1)
     
----
github work.
Create new gitwork directory in github.
Mark it as public.

in local directory: 
git init
git add .
git config --global user.name "PYDuquesnoy"
git commit -m "initial commit"
--set remote: ties local to remote
git remote add origin https://github.com/PYDuquesnoy/docker-CICD.git

git push origin master